
/*
	
PROCEDIMIENTO QUE ACTUALIZA LA PUNTUACIÓN DEL SOCIO QUE REALIZA UNA OPERACIÓN.
SE SUMA O SE RESTA SEGÚN EL TIPO DE PUNTUACIÓN QUE SEA Y SI EL DÉFICIT ES MENOR QUE -30
AL FINALIZAR LA OPERACIÓN, NO SE REALIZA.
*/


DELIMITER |
CREATE PROCEDURE ACTUALIZAR_PUNTUACION(IN PUNTUACIONTIPO INT,IN SOCIO INT,IN PUNTUACIONSOCIO INT)
BEGIN
DECLARE DEFICIT INT;
SET DEFICIT = (SELECT VALOR FROM TIPOS_PUNTUACION WHERE TIPO='DEFICIT');
IF (PUNTUACIONSOCIO+PUNTUACIONTIPO)>=DEFICIT THEN
	UPDATE SOCIOS
	SET PUNTUACION = PUNTUACION+PUNTUACIONTIPO
	WHERE ID_SOCIO=SOCIO;
ELSE
	DELETE FROM HISTORICO_PUNTUACIONES
    WHERE ID_PUNTUACION=LAST_INSERT_ID();
END IF;
END;
|
DELIMITER ;

-- INSERT INTO HISTORICO_PUNTUACIONES (FECHA,TIPO_PUNTUACION,SOCIO) VALUES(NOW(),5,3);



/*
TRIGGER QUE ACTUALIZA EL HISTÓRICO DE PUNTUACIONES AL DAR DE ALTA UNA MOVILIDAD EN UNA EMPRESA


*/
DELIMITER |

CREATE TRIGGER ACTUALIZAR_HISTORICO_PUNTUACIONES_MOVILIDAD_EMPRESA AFTER INSERT ON MOVILIDADES_EMPRESAS
FOR EACH ROW
BEGIN
DECLARE PUNTUACIONNUEVA INT;
DECLARE SOCIONUEVO INT;
DECLARE VALORPUNTUACION INT;
DECLARE PUNTUACIONSOCIO INT;
SET PUNTUACIONNUEVA=(SELECT ID_TIPO_PUNTUACION FROM TIPOS_PUNTUACION WHERE TIPO='MOBILITY');
SET SOCIONUEVO=(SELECT SOCIO FROM ALUMNOS WHERE ID_ALUMNO=NEW.ALUMNO);
SET VALORPUNTUACION=(SELECT VALOR FROM TIPOS_PUNTUACION WHERE TIPO='DEFICIT');
SET PUNTUACIONSOCIO=(SELECT PUNTUACION FROM SOCIOS WHERE ID_SOCIO=(SELECT SOCIO FROM ALUMNOS WHERE ID_ALUMNO=NEW.ALUMNO));

INSERT INTO HISTORICO_PUNTUACIONES (FECHA,TIPO_PUNTUACION,SOCIO) VALUES(NOW(),PUNTUACIONNUEVA,SOCIONUEVO);
CALL ACTUALIZAR_PUNTUACION(VALORPUNTUACION,SOCIONUEVO,PUNTUACIONSOCIO);
END
|
DELIMITER ;

/*
TRIGGER QUE ACTUALIZA EL HISTÓRICO DE PUNTUACIONES AL DAR DE ALTA UNA MOVILIDAD EN UNA INSTITUCIÓN

*/

DELIMITER |

CREATE TRIGGER ACTUALIZAR_HISTORICO_PUNTUACIONES_MOVILIDAD_INSTITUCION AFTER INSERT ON MOVILIDADES_INSTITUCIONES
FOR EACH ROW
BEGIN
DECLARE PUNTUACIONNUEVA INT;
DECLARE SOCIONUEVO INT;
DECLARE VALORPUNTUACION INT;
DECLARE PUNTUACIONSOCIO INT;
SET PUNTUACIONNUEVA=(SELECT ID_TIPO_PUNTUACION FROM TIPOS_PUNTUACION WHERE TIPO='MOBILITY');
SET SOCIONUEVO=(SELECT SOCIO FROM ALUMNOS WHERE ID_ALUMNO=NEW.ALUMNO);
SET VALORPUNTUACION=(SELECT VALOR FROM TIPOS_PUNTUACION WHERE TIPO='MOBILITY');
SET PUNTUACIONSOCIO=(SELECT PUNTUACION FROM SOCIOS WHERE ID_SOCIO=(SELECT SOCIO FROM ALUMNOS WHERE ID_ALUMNO=NEW.ALUMNO));
INSERT INTO HISTORICO_PUNTUACIONES (FECHA,TIPO_PUNTUACION,SOCIO) VALUES(NOW(),PUNTUACIONNUEVA,SOCIONUEVO);
CALL ACTUALIZAR_PUNTUACION(VALORPUNTUACION,SOCIONUEVO,PUNTUACIONSOCIO);
END
|
DELIMITER ;


DELIMITER |

CREATE TRIGGER ACTUALIZAR_HISTORICO_PUNTUACIONES_ALTA_EMPRESA AFTER INSERT ON EMPRESAS
FOR EACH ROW
BEGIN
DECLARE PUNTUACIONNUEVA INT;
DECLARE SOCIONUEVO INT;
DECLARE VALORPUNTUACION INT;
DECLARE PUNTUACIONSOCIO INT;
SET PUNTUACIONNUEVA=(SELECT ID_TIPO_PUNTUACION FROM TIPOS_PUNTUACION WHERE TIPO='COMPANY REGISTER');
SET SOCIONUEVO = (SELECT SOCIO FROM EMPRESAS WHERE ID_EMPRESA=NEW.ID_EMPRESA);
SET VALORPUNTUACION=(SELECT VALOR FROM TIPOS_PUNTUACION WHERE TIPO='COMPANY REGISTER');
SET PUNTUACIONSOCIO=(SELECT PUNTUACION FROM SOCIOS WHERE ID_SOCIO=(SELECT SOCIO FROM EMPRESAS WHERE ID_EMPRESA=NEW.ID_EMPRESA));
INSERT INTO HISTORICO_PUNTUACIONES (FECHA,TIPO_PUNTUACION,SOCIO) VALUES (NOW(),PUNTUACIONNUEVA,SOCIONUEVO);
CALL ACTUALIZAR_PUNTUACION(VALORPUNTUACION,SOCIONUEVO,PUNTUACIONSOCIO);
END


| DELIMITER ;


DELIMITER |

CREATE TRIGGER ASIGNAR_PUNTUACION_REGISTRO AFTER INSERT ON SOCIOS
FOR EACH ROW
BEGIN
DECLARE PUNTUACIONNUEVA INT;
DECLARE SOCIONUEVO INT;
DECLARE VALORPUNTUACION INT;
DECLARE PUNTUACIONSOCIO INT;
SET PUNTUACIONNUEVA=(SELECT ID_TIPO_PUNTUACION FROM TIPOS_PUNTUACION WHERE TIPO='REGISTER');
SET SOCIONUEVO = (SELECT ID_SOCIO FROM SOCIOS WHERE ID_SOCIO=LAST_INSERT_ID());
SET VALORPUNTUACION=(SELECT VALOR FROM TIPOS_PUNTUACION WHERE TIPO='REGISTER');
INSERT INTO HISTORICO_PUNTUACIONES (FECHA,TIPO_PUNTUACION,SOCIO) VALUES (NOW(),PUNTUACIONNUEVA,SOCIONUEVO);
CALL ACTUALIZAR_PUNTUACION(VALORPUNTUACION,SOCIONUEVO,0);
END


| DELIMITER ;


